geom_point(size=.5) +geom_text(hjust=1, vjust=-1,size=1.5,angle=30)+
xlim(c(-1.05,-.6))
ggplot(dat, aes(x= V1,y=V2,  label=names))+
geom_point(size=.5) +geom_text(hjust=1, vjust=-1,size=1.5,angle=45)+
xlim(c(-1.05,-.6))
ggplot(dat, aes(x= V1,y=V2,  label=names))+
geom_point(size=.5) +geom_text(hjust=1, vjust=-1,size=1.5,angle=45)+
xlim(c(-1.01,-.6))
ggplot(dat, aes(x= V1,y=V2,  label=names))+
geom_point(size=.5) +geom_text(hjust=1, vjust=-1,size=1.5,angle=45)+
xlim(c(-1.01,-.64))
ggplot(dat, aes(x= V1,y=V2,  label=names))+
geom_point(size=.5) +geom_text(hjust=1, vjust=-1,size=1.5,angle=45)+
xlim(c(-1.01,-.63))
ggplot(dat, aes(x= V1,y=V2,  label=names))+
geom_point(size=.5) +geom_text(hjust=1, vjust=-1,size=1.5,angle=45)+
xlim(c(-1.01,-.62))
ggplot(dat, aes(x= V1,y=V2,  label=names))+
geom_point(size=.5) +geom_text(hjust=1, vjust=-1,size=1.5,angle=45)+
xlim(c(-1.01,-.62)) +
ylim(c(-.6,.6))
ggplot(dat, aes(x= V1,y=V2,  label=names))+
geom_point(size=.5) +geom_text(hjust=1, vjust=-1,size=1.5,angle=45)+
xlim(c(-1.01,-.62)) +
ylim(-1,1)
ggplot(dat, aes(x= V1,y=V2,  label=names))+
geom_point(size=.5) +geom_text(hjust=1, vjust=-1,size=1.5,angle=45)+
xlim(c(-1.01,-.62)) +
ylim(-1.1,.9)
#hpnames <- hpnames[match(hpnames$id,hpgraph$source),]
A <- graph_from_data_frame(hpgraph,directed=FALSE)
V(A)$char <-hpnames[match(V(A),hpnames$id),"name"]
Adj <- as_adjacency_matrix(A)
svdA <- svd(Adj)
plot(svdA$d) #take d = 2
Xhat <- svdA$u[,c(1:2)] #%*% diag(svdA$d[c(1:2)]^(1/2))
plot(Xhat)
Xhat_new <- Xhat
for(i in c(1:nrow(Xhat_new))) {
Xhat_new[i,] <- Xhat[i,]/sqrt(sum(Xhat[i,]^2))
}
plot(Xhat_new)
dat <- as.data.frame(Xhat_new)
dat$names <- V(A)$char
library(ggplot2)
ggplot(dat, aes(x= V1,y=V2,  label=names))+
geom_point(size=.5) +geom_text(hjust=1, vjust=-1,size=1.5,angle=45)+
xlim(c(-1.01,-.62)) +
ylim(-1.1,.9)
A2 <- largest.independent.vertex.sets(A)
A2
A <- largest.independent.vertex.sets(A)[[1]]
A
V(A)$char <-hpnames[match(V(A),hpnames$id),"name"]
#hpnames <- hpnames[match(hpnames$id,hpgraph$source),]
A <- graph_from_data_frame(hpgraph,directed=FALSE)
A <- induced.subgraph(A,largest.independent.vertex.sets(A)[[1]])
V(A)$char <-hpnames[match(V(A),hpnames$id),"name"]
Adj <- as_adjacency_matrix(A)
svdA <- svd(Adj)
plot(svdA$d) #take d = 2
A
largest.independent.vertex.sets(A)
#hpnames <- hpnames[match(hpnames$id,hpgraph$source),]
A <- graph_from_data_frame(hpgraph,directed=FALSE)
A2 <- induced.subgraph(A,largest.independent.vertex.sets(A)[[1]])
A2
#hpnames <- hpnames[match(hpnames$id,hpgraph$source),]
A <- graph_from_data_frame(hpgraph,directed=FALSE)
A2 <- induced.subgraph(A,largest.independent.vertex.sets(A))
#hpnames <- hpnames[match(hpnames$id,hpgraph$source),]
A <- graph_from_data_frame(hpgraph,directed=FALSE)
A2 <- induced.subgraph(A,largest.independent.vertex.sets(A)[[1]])
A2
largest.independent.vertex.sets(A)
V(A)
largest.independent.vertex.sets()
?largest.independent.vertex.sets()
?clusters
components <- igraph::clusters(A, mode="weak")
biggest_cluster_id <- which.max(components$csize)
# ids
vert_ids <- V(A)[components$membership == biggest_cluster_id]
# subgraph
igraph::induced_subgraph(A, vert_ids)
# subgraph
A <- igraph::induced_subgraph(A, vert_ids)
#A2 <- induced.subgraph(A,largest.independent.vertex.sets(A)[[1]])
V(A)$char <-hpnames[match(V(A),hpnames$id),"name"]
Adj <- as_adjacency_matrix(A)
svdA <- svd(Adj)
plot(svdA$d) #take d = 2
Xhat <- svdA$u[,c(1:2)] #%*% diag(svdA$d[c(1:2)]^(1/2))
plot(Xhat)
Xhat_new <- Xhat
for(i in c(1:nrow(Xhat_new))) {
Xhat_new[i,] <- Xhat[i,]/sqrt(sum(Xhat[i,]^2))
}
plot(Xhat_new)
dat <- as.data.frame(Xhat_new)
dat$names <- V(A)$char
library(ggplot2)
ggplot(dat, aes(x= V1,y=V2,  label=names))+
geom_point(size=.5) +geom_text(hjust=1, vjust=-1,size=1.5,angle=45)+
xlim(c(-1.01,-.62)) +
ylim(-1.1,.9)
dat <- as.data.frame(Xhat)
dat$names <- V(A)$char
library(ggplot2)
ggplot(dat, aes(x= V1,y=V2,  label=names))+
geom_point(size=.5) +geom_text(hjust=1, vjust=-1,size=1.5,angle=45)+
xlim(c(-1.01,-.62)) +
ylim(-1.1,.9)
ggplot(dat, aes(x= V1,y=V2,  label=names))+
geom_point(size=.5) +geom_text(hjust=1, vjust=-1,size=1.5,angle=45)#+
Xhat <- svdA$u[,c(1:2)] %*% diag(c(-1,-1)) #%*% diag(svdA$d[c(1:2)]^(1/2))
plot(Xhat)
Xhat_new <- Xhat
for(i in c(1:nrow(Xhat_new))) {
Xhat_new[i,] <- Xhat[i,]/sqrt(sum(Xhat[i,]^2))
}
plot(Xhat_new)
dat <- as.data.frame(Xhat)
dat$names <- V(A)$char
library(ggplot2)
ggplot(dat, aes(x= V1,y=V2,  label=names))+
geom_point(size=.5) +geom_text(hjust=1, vjust=-1,size=1.5,angle=45)#+
Xhat_new <- Xhat
for(i in c(1:nrow(Xhat_new))) {
Xhat_new[i,] <- Xhat[i,]/Xhat[i,1]
}
plot(Xhat_new)
dat <- as.data.frame(Xhat)
dat$names <- V(A)$char
library(ggplot2)
ggplot(dat, aes(x= V1,y=V2,  label=names))+
geom_point(size=.5) +geom_text(hjust=1, vjust=-1,size=1.5,angle=45)#+
library(ggplot2)
ggplot(dat, aes(x= V1,y=V2,  label=names))+
geom_point(size=.5) +geom_text(hjust=1, vjust=-1,size=1.5,angle=45)#+
dat <- as.data.frame(Xhat_new)
dat$names <- V(A)$char
library(ggplot2)
ggplot(dat, aes(x= V1,y=V2,  label=names))+
geom_point(size=.5) +geom_text(hjust=1, vjust=-1,size=1.5,angle=45)#+
library(ggplot2)
ggplot(dat, aes(x= V1,y=V2,  label=names))+
geom_point(size=.5) +geom_text(hjust=1, vjust=-1,size=1.5,angle=45)#+
Xhat_new <- Xhat
for(i in c(1:nrow(Xhat_new))) {
Xhat_new[i,] <- Xhat[i,]/sqrt(sum(Xhat[i,]^2))
}
plot(Xhat_new)
dat <- as.data.frame(Xhat_new)
dat$names <- V(A)$char
library(ggplot2)
ggplot(dat, aes(x= V1,y=V2,  label=names))+
geom_point(size=.5) +geom_text(hjust=1, vjust=-1,size=1.5,angle=45)#+
ggplot(dat, aes(x= V1,y=V2,  label=names))+
geom_point(size=.5) +geom_text(hjust=1, vjust=-1,size=1.5,angle=45)+
xlim(c(-1.01,-.62)) +
ylim(-1.1,.9)
ggplot(dat, aes(x= V1,y=V2,  label=names))+
geom_point(size=.5) +
geom_text(hjust=1, vjust=-1,size=1.5,angle=45)#+
library(igraph)
hpnames <- read.csv("characters.csv")
hpgraph <- read.csv("relations.csv")
#subset to enemies
hpgraph <- hpgraph[which(hpgraph$type == "-"),]
A <- graph_from_data_frame(hpgraph,directed=FALSE)
components <- igraph::clusters(A, mode="weak")
biggest_cluster_id <- which.max(components$csize)
# ids
vert_ids <- V(A)[components$membership == biggest_cluster_id]
# subgraph
A <- igraph::induced_subgraph(A, vert_ids)
#A2 <- induced.subgraph(A,largest.independent.vertex.sets(A)[[1]])
V(A)$char <-hpnames[match(V(A),hpnames$id),"name"]
Adj <- as_adjacency_matrix(A)
svdA <- svd(Adj)
plot(svdA$d) #take d = 2
#plot(svdA$d) #take d = 2
Xhat <- svdA$u[,c(1:2)] %*% diag(c(-1,-1)) #%*% diag(svdA$d[c(1:2)]^(1/2))
#plot(svdA$d) #take d = 2
Xhat <- svdA$u[,c(1:2)] %*% diag(c(-1,-1)) %*% diag(svdA$d[c(1:2)]^(1/2))
plot(Xhat)
#plot(Xhat)
Xhat_new <- Xhat
for(i in c(1:nrow(Xhat_new))) {
Xhat_new[i,] <- Xhat[i,]/sqrt(sum(Xhat[i,]^2))
}
plot(Xhat_new)
dat <- as.data.frame(Xhat_new)
dat$names <- V(A)$char
library(ggplot2)
ggplot(dat, aes(x= V1,y=V2,  label=names))+
geom_point(size=.5) +
geom_text(hjust=1, vjust=-1,size=1.5,angle=45)#+
plot(Xhat_new)
library(ggplot2)
ggplot(dat, aes(x= V1,y=V2,  label=names))+
geom_point(size=.5) +
geom_text(hjust=1, vjust=-1,size=1.5,angle=45)#+
ggplot(dat, aes(x= V1,y=V2,  label=names))+
geom_point(size=.5) +
geom_text(hjust=1, vjust=-1,size=.5,angle=45)#+
ggplot(dat, aes(x= V1,y=V2,  label=names))+
geom_point(size=.5) +
geom_text(hjust=1, vjust=-1,size=1.5,angle=45)#+
library(igraph)
hpnames <- read.csv("characters.csv")
hpgraph <- read.csv("relations.csv")
#subset to enemies
hpgraph <- hpgraph[which(hpgraph$type == "-"),]
A <- graph_from_data_frame(hpgraph,directed=FALSE)
components <- igraph::clusters(A, mode="weak")
biggest_cluster_id <- which.max(components$csize)
# ids
vert_ids <- V(A)[components$membership == biggest_cluster_id]
# subgraph
A <- igraph::induced_subgraph(A, vert_ids)
#A2 <- induced.subgraph(A,largest.independent.vertex.sets(A)[[1]])
V(A)$char <-hpnames[match(V(A),hpnames$id),"name"]
Adj <- as_adjacency_matrix(A)
svdA <- svd(Adj)
#plot(svdA$d) #take d = 2
Xhat <- svdA$u[,c(1:2)] # %*% diag(svdA$d[c(1:2)]^(1/2))
#plot(Xhat)
Xhat_new <- Xhat
for(i in c(1:nrow(Xhat_new))) {
Xhat_new[i,] <- Xhat[i,]/sqrt(sum(Xhat[i,]^2))
}
plot(Xhat_new)
dat <- as.data.frame(Xhat_new)
dat$names <- V(A)$char
library(ggplot2)
ggplot(dat, aes(x= V1,y=V2,  label=names))+
geom_point(size=.5) +
geom_text(hjust=1, vjust=-1,size=1.5,angle=45)
ggplot(dat, aes(x= V1,y=V2,  label=names))+
geom_point(size=.5) +
geom_text(hjust=1, vjust=-1,size=2,angle=45)
dat[which(dat$V2 < 0),'names']
dat[which(dat$V2 > 0),'names']
library(igraph)
hpnames <- read.csv("characters.csv")
hpgraph <- read.csv("relations.csv")
#subset to enemies
hpgraph <- hpgraph[which(hpgraph$type == "-"),]
A <- graph_from_data_frame(hpgraph,directed=FALSE)
components <- igraph::clusters(A, mode="weak")
biggest_cluster_id <- which.max(components$csize)
# ids
vert_ids <- V(A)[components$membership == biggest_cluster_id]
# subgraph
A <- igraph::induced_subgraph(A, vert_ids)
#A2 <- induced.subgraph(A,largest.independent.vertex.sets(A)[[1]])
V(A)$char <-hpnames[match(V(A),hpnames$id),"name"]
Adj <- as_adjacency_matrix(A)
svdA <- svd(Adj)
#plot(svdA$d) #take d = 2
Xhat <- svdA$u[,c(1:2)] # %*% diag(svdA$d[c(1:2)]^(1/2))
#plot(Xhat)
Xhat_new <- Xhat
for(i in c(1:nrow(Xhat_new))) {
Xhat_new[i,] <- Xhat[i,]/sqrt(sum(Xhat[i,]^2))
}
plot(Xhat_new)
dat <- as.data.frame(Xhat_new)
dat$names <- V(A)$char
names(dat)
dat$names
hpnames[match(V(A),hpnames$id),"name"]
A
V(A)
match(V(A),hpnames$id)
?match
hpnames
?match
match(V(A),hpnames$id)
View(hpnames)
V(A)
class(V(A))
as.vector(V(A))
V(A)
names(V(A))
match(names(V(A)),as.character(hpnames$id))
#A2 <- induced.subgraph(A,largest.independent.vertex.sets(A)[[1]])
V(A)$char <- hpnames[match(names(V(A)),as.character(hpnames$id)),"name"]
Adj <- as_adjacency_matrix(A)
svdA <- svd(Adj)
#plot(svdA$d) #take d = 2
Xhat <- svdA$u[,c(1:2)] # %*% diag(svdA$d[c(1:2)]^(1/2))
#plot(Xhat)
Xhat_new <- Xhat
for(i in c(1:nrow(Xhat_new))) {
Xhat_new[i,] <- Xhat[i,]/sqrt(sum(Xhat[i,]^2))
}
plot(Xhat_new)
dat <- as.data.frame(Xhat_new)
dat$names <- V(A)$char
library(ggplot2)
ggplot(dat, aes(x= V1,y=V2,  label=names))+
geom_point(size=.5) +
geom_text(hjust=1, vjust=-1,size=2,angle=45)
dat[which(dat$V2 < 0),'names']
dat[which(dat$V2 > 0),'names']
dat2 <- as.data.frame(Xhat)
dat2$names <- V(A)$char
library(ggplot2)
ggplot(dat, aes(x= V1,y=V2,  label=names))+
geom_point(size=.5) +
geom_text(hjust=1, vjust=-1,size=2,angle=45)
dat[which(dat$V2 < 0),'names']
dat[which(dat$V2 > 0),'names']
ggplot(dat2, aes(x= V1,y=V2,  label=names))+
geom_point(size=.5) +
geom_text(hjust=1, vjust=-1,size=2,angle=45)
ggplot(dat, aes(x= V1,y=V2,  label=names))+
geom_point(size=.5) +
geom_text(hjust=1, vjust=-1,size=2,angle=45)
dat[which(dat$V2 < 0),'names']
dat[which(dat$V2 > 0),'names']
library(igraph)
hpnames <- read.csv("characters.csv")
hpgraph <- read.csv("relations.csv")
#subset to enemies
hpgraph <- hpgraph[which(hpgraph$type == "-"),]
A <- graph_from_data_frame(hpgraph,directed=FALSE)
components <- igraph::clusters(A, mode="weak")
biggest_cluster_id <- which.max(components$csize)
View(hpgraph)
View(hpnames)
# ids
vert_ids <- V(A)[components$membership == biggest_cluster_id]
# subgraph
A <- igraph::induced_subgraph(A, vert_ids)
#A2 <- induced.subgraph(A,largest.independent.vertex.sets(A)[[1]])
V(A)$char <- hpnames[match(names(V(A)),as.character(hpnames$id)),"name"]
Adj <- as_adjacency_matrix(A)
svdA <- svd(Adj)
#plot(svdA$d) #take d = 2
Xhat <- svdA$u[,c(1:2)] # %*% diag(svdA$d[c(1:2)]^(1/2))
#plot(Xhat)
Xhat_new <- Xhat
for(i in c(1:nrow(Xhat_new))) {
Xhat_new[i,] <- Xhat[i,]/sqrt(sum(Xhat[i,]^2))
}
dat <- as.data.frame(Xhat_new)
dat$names <- V(A)$char
dat2 <- as.data.frame(Xhat)
dat2$names <- V(A)$char
library(ggplot2)
ggplot(dat2, aes(x= V1,y=V2,  label=names))+
geom_point(size=.5) +
geom_text(hjust=1, vjust=-1,size=2,angle=45)
ggplot(dat, aes(x= V1,y=V2,  label=names))+
geom_point(size=.5) +
geom_text(hjust=1, vjust=-1,size=2,angle=45)
dat[which(dat$V2 < 0),'names']
dat[which(dat$V2 > 0),'names']
library(igraph)
hpnames <- read.csv("characters.csv")
View(hpnames)
hpgraph <- read.csv("relations.csv")
View(hpgraph)
#subset to enemies
hpgraph <- hpgraph[which(hpgraph$type == "-"),]
A <- graph_from_data_frame(hpgraph,directed=FALSE)
components <- igraph::clusters(A, mode="weak")
biggest_cluster_id <- which.max(components$csize)
# ids
vert_ids <- V(A)[components$membership == biggest_cluster_id]
# subgraph
A <- igraph::induced_subgraph(A, vert_ids)
#A2 <- induced.subgraph(A,largest.independent.vertex.sets(A)[[1]])
V(A)$char <- hpnames[match(names(V(A)),as.character(hpnames$id)),"name"]
Adj <- as_adjacency_matrix(A)
svdA <- svd(Adj)
#plot(svdA$d) #take d = 2
Xhat <- svdA$u[,c(1:2)] # %*% diag(svdA$d[c(1:2)]^(1/2))
#plot(Xhat)
Xhat_new <- Xhat
for(i in c(1:nrow(Xhat_new))) {
Xhat_new[i,] <- Xhat[i,]/sqrt(sum(Xhat[i,]^2))
}
dat <- as.data.frame(Xhat_new)
dat$names <- V(A)$char
dat2 <- as.data.frame(Xhat)
dat2$names <- V(A)$char
library(ggplot2)
ggplot(dat2, aes(x= V1,y=V2,  label=names))+
geom_point(size=.5) +
geom_text(hjust=1, vjust=-1,size=2,angle=45)
ggplot(dat, aes(x= V1,y=V2,  label=names))+
geom_point(size=.5) +
geom_text(hjust=1, vjust=-1,size=2,angle=45)
dat[which(dat$V2 < 0),'names']
dat[which(dat$V2 > 0),'names']
library(igraph)
hpnames <- read.csv("characters.csv")
hpgraph <- read.csv("relations.csv")
#subset to enemies
hpgraph <- hpgraph[which(hpgraph$type == "-"),]
A <- as.undirected(graph_from_data_frame(hpgraph))
components <- igraph::clusters(A, mode="weak")
biggest_cluster_id <- which.max(components$csize)
# ids
vert_ids <- V(A)[components$membership == biggest_cluster_id]
# subgraph
A <- igraph::induced_subgraph(A, vert_ids)
#A2 <- induced.subgraph(A,largest.independent.vertex.sets(A)[[1]])
V(A)$char <- hpnames[match(names(V(A)),as.character(hpnames$id)),"name"]
Adj <- as_adjacency_matrix(A)
svdA <- svd(Adj)
#plot(svdA$d) #take d = 2
Xhat <- svdA$u[,c(1:2)] # %*% diag(svdA$d[c(1:2)]^(1/2))
#plot(Xhat)
Xhat_new <- Xhat
for(i in c(1:nrow(Xhat_new))) {
Xhat_new[i,] <- Xhat[i,]/sqrt(sum(Xhat[i,]^2))
}
dat <- as.data.frame(Xhat_new)
dat$names <- V(A)$char
dat2 <- as.data.frame(Xhat)
dat2$names <- V(A)$char
library(ggplot2)
ggplot(dat2, aes(x= V1,y=V2,  label=names))+
geom_point(size=.5) +
geom_text(hjust=1, vjust=-1,size=2,angle=45)
ggplot(dat2, aes(x= V1,y=V2,  label=names))+
geom_point(size=.5) +
geom_text(hjust=1, vjust=-1,size=2,angle=45)
#first we generate one adjacency matrix from E-R graph
generate_adj_matrix_SBM <- function(B,n,memberships) {
A <- matrix(0,n,n)
#generate A:
for(i in c(1:n)) {
for(j in c(1:(i-1))) {
prob <- B[memberships[i],memberships[j]]
A[i,j] <- rbinom(1,1,prob)
A[j,i] <- A[i,j]
}
}
return(A)
}
n <- 1000
#play with these:
a <- .008
b <- .002
c <- .004
d <- .001
B <- matrix(c(
a,b,b,
b,c,b,
b,b,d
),3,3)
B
c1 <- floor(n/3)
c2 <- floor(n/3)
c3 <- n - c1 - c2
memberships <- c(rep(1,c1),rep(2,c2),rep(3,c3))
A <- generate_adj_matrix_SBM(B,n,memberships)
heatmap(A,symm = TRUE,Rowv=NA, Colv=NA,labRow=FALSE, labCol=FALSE, revC=TRUE)
heatmap(A,symm = TRUE,Rowv=NA, Colv=NA,labRow=FALSE, labCol=FALSE, revC=TRUE)
#play with these:
a <- .08
b <- .02
c <- .04
d <- .01
B <- matrix(c(
a,b,b,
b,c,b,
b,b,d
),3,3)
B
c1 <- floor(n/3)
c2 <- floor(n/3)
c3 <- n - c1 - c2
memberships <- c(rep(1,c1),rep(2,c2),rep(3,c3))
A <- generate_adj_matrix_SBM(B,n,memberships)
heatmap(A,symm = TRUE,Rowv=NA, Colv=NA,labRow=FALSE, labCol=FALSE, revC=TRUE)
A <- generate_adj_matrix_SBM(B,n,memberships)
heatmap(A,symm = TRUE,Rowv=NA, Colv=NA,labRow=FALSE, labCol=FALSE, revC=TRUE)
png('sparse_example.png',units='in',width=5,height=5,res=300)
heatmap(as.matrix(A),symm = TRUE,Rowv=NA, Colv=NA,
labRow=FALSE, labCol=FALSE, revC=TRUE)#,col=colPal,breaks=col_breaks)
dev.off()
n <- 1000
#play with these:
a <- .08
b <- .07
c <- .1
d <- .06
B <- matrix(c(
a,b,b,
b,c,b,
b,b,d
),3,3)
B
c1 <- floor(n/3)
c2 <- floor(n/3)
c3 <- n - c1 - c2
memberships <- c(rep(1,c1),rep(2,c2),rep(3,c3))
A <- generate_adj_matrix_SBM(B,n,memberships)
heatmap(A,symm = TRUE,Rowv=NA, Colv=NA,labRow=FALSE, labCol=FALSE, revC=TRUE)
heatmap(A,symm = TRUE,Rowv=NA, Colv=NA,labRow=FALSE, labCol=FALSE, revC=TRUE)
png('sparse_example.png',units='in',width=5,height=5,res=300)
heatmap(as.matrix(A),symm = TRUE,Rowv=NA, Colv=NA,
labRow=FALSE, labCol=FALSE, revC=TRUE)#,col=colPal,breaks=col_breaks)
dev.off()
