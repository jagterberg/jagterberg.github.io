Yhat <- cbind(Yhat,Xhats[[i]])
}
getElbows(svd(Yhat)$d)
#########################################
#multilayer analysis
####################################
#list of different embedding dimensions
weighted = FALSE
Ks <- rep(20,length(As))
#we now embed each matrix
#choose 3 arbitrarily
Xhats <- list()
normalize= FALSE #set to true if you think DCSBM
for (i in c(1:length(As))) {
if (weighted) {
A <- as_adjacency_matrix(As[[i]],attr= 'weight')
} else {
A <- as_adjacency_matrix(As[[i]])
}
rownames(A) <- chars
colnames(A) <- chars
A <- A[order(rownames(A)),]
A <- A[,order(colnames(A))]
Xhats[[i]] <- irlba::irlba(A,Ks[i])$u
if(normalize) {
for (j in c(1:nrow(Xhats[[i]]))) {
val <- sqrt(sum(Xhats[[i]][j,]^2))
if (val <- .0000000001) {
Xhats[[i]][j,] <- 0
} else {
Xhats[[i]][j,] <- Xhats[[i]][j,]/val
}
}
}
}
Yhat <- Xhats[[1]]
for ( i in c(2:length(As))) {
Yhat <- cbind(Yhat,Xhats[[i]])
}
getElbows(svd(Yhat)$d)
Uhat <- irlba::irlba(Yhat,38)$u
dat <- as.data.frame(Uhat)
dat$names <- rownames(A)
library(ggplot2)
ggplot(dat, aes(x= V1,y=V2,  label=names))+
geom_point(size=.5) +
geom_text(hjust=1, vjust=-1,size=2,angle=45)
clusts <- Mclust(Uhat)
clust = clusts$classification
dat$names[which(clust == 1)]
dat$names[which(clust == 2)]
dat$names[which(clust == 3)]
#########################################
#multilayer analysis
####################################
#list of different embedding dimensions
weighted = FALSE
Ks <- rep(50,length(As))
#we now embed each matrix
#choose 3 arbitrarily
Xhats <- list()
normalize= TRUE #set to true if you think DCSBM
for (i in c(1:length(As))) {
if (weighted) {
A <- as_adjacency_matrix(As[[i]],attr= 'weight')
} else {
A <- as_adjacency_matrix(As[[i]])
}
rownames(A) <- chars
colnames(A) <- chars
A <- A[order(rownames(A)),]
A <- A[,order(colnames(A))]
Xhats[[i]] <- irlba::irlba(A,Ks[i])$u
if(normalize) {
for (j in c(1:nrow(Xhats[[i]]))) {
val <- sqrt(sum(Xhats[[i]][j,]^2))
if (val <- .0000000001) {
Xhats[[i]][j,] <- 0
} else {
Xhats[[i]][j,] <- Xhats[[i]][j,]/val
}
}
}
}
getElbows(irlba(As[[1]])$d)
getElbows(irlba::irlba(As[[1]])$d)
getElbows(irlba::irlba(as_adjacency_matrix(As[[i]]))$d)
dim(as_adjacency_matrix(As[[1]]))
getElbows(irlba::irlba(as_adjacency_matrix(As[[i]]))$d)
irlba(as_adjacency_matrix(As[[i]]))
irlba::irlba(as_adjacency_matrix(As[[i]]))
getElbows(svd(as_adjacency_matrix(As[[i]]))$d)
Ks <- rep(26,length(As))
#we now embed each matrix
#choose 3 arbitrarily
Xhats <- list()
normalize= TRUE #set to true if you think DCSBM
for (i in c(1:length(As))) {
if (weighted) {
A <- as_adjacency_matrix(As[[i]],attr= 'weight')
} else {
A <- as_adjacency_matrix(As[[i]])
}
rownames(A) <- chars
colnames(A) <- chars
A <- A[order(rownames(A)),]
A <- A[,order(colnames(A))]
Xhats[[i]] <- irlba::irlba(A,Ks[i])$u
if(normalize) {
for (j in c(1:nrow(Xhats[[i]]))) {
val <- sqrt(sum(Xhats[[i]][j,]^2))
if (val <- .0000000001) {
Xhats[[i]][j,] <- 0
} else {
Xhats[[i]][j,] <- Xhats[[i]][j,]/val
}
}
}
}
Yhat <- Xhats[[1]]
for ( i in c(2:length(As))) {
Yhat <- cbind(Yhat,Xhats[[i]])
}
getElbows(svd(Yhat)$d)
Uhat <- irlba::irlba(Yhat,3)$u
Ks <- rep(26,length(As))
#we now embed each matrix
#choose 3 arbitrarily
Xhats <- list()
normalize= TRUE #set to true if you think DCSBM
Xhats[[i]] <- irlba::irlba(A,Ks[i])$u
Xhats[[1]]
i
Xhats[[7]]
j <- 1
val <- sqrt(sum(Xhats[[i]][j,]^2))
val
getElbows(svd(as_adjacency_matrix(As[[i]]))$d)
Ks <- rep(26,length(As))
#we now embed each matrix
#choose 3 arbitrarily
Xhats <- list()
normalize= TRUE #set to true if you think DCSBM
for (i in c(1:length(As))) {
if (weighted) {
A <- as_adjacency_matrix(As[[i]],attr= 'weight')
} else {
A <- as_adjacency_matrix(As[[i]])
}
rownames(A) <- chars
colnames(A) <- chars
A <- A[order(rownames(A)),]
A <- A[,order(colnames(A))]
Xhats[[i]] <- irlba::irlba(A,Ks[i])$u
if(normalize) {
for (j in c(1:nrow(Xhats[[i]]))) {
val <- sqrt(sum(Xhats[[i]][j,]^2))
if (val <= .0000000001) {
Xhats[[i]][j,] <- 0
} else {
Xhats[[i]][j,] <- Xhats[[i]][j,]/val
}
}
}
}
Yhat <- Xhats[[1]]
for ( i in c(2:length(As))) {
Yhat <- cbind(Yhat,Xhats[[i]])
}
getElbows(svd(Yhat)$d)
Uhat <- irlba::irlba(Yhat,3)$u
dat <- as.data.frame(Uhat)
dat$names <- rownames(A)
library(ggplot2)
ggplot(dat, aes(x= V1,y=V2,  label=names))+
geom_point(size=.5) +
geom_text(hjust=1, vjust=-1,size=2,angle=45)
clusts <- Mclust(Uhat)
clust = clusts$classification
dat$names[which(clust == 1)]
dat$names[which(clust == 2)]
dat$names[which(clust == 3)]
dat$names[which(clust == 4)]
dat$names[which(clust == 5)]
dat$names[which(clust == 6)]
dat$names[which(clust == 7)]
dat$names[which(clust == 1)]
dat$names[which(clust == 2)]
dat$names[which(clust == 1)]
dat$names[which(clust == 2)]
dat$names[which(clust == 1)]
dat$names[which(clust == 2)]
dat$names[which(clust == 3)]
dat$names[which(clust == 4)]
dat$names[which(clust == 5)]
dat$names[which(clust == 6)]
dat$names[which(clust == 7)]
getElbows(svd(as_adjacency_matrix(As[[1]]))$d)
getElbows(svd(as_adjacency_matrix(As[[2]]))$d)
getElbows(svd(as_adjacency_matrix(As[[3]]))$d)
K2 <- 23
getElbows(svd(as_adjacency_matrix(As[[4]]))$d)
getElbows(svd(as_adjacency_matrix(As[[5]]))$d)
getElbows(svd(as_adjacency_matrix(As[[6]]))$d)
getElbows(svd(as_adjacency_matrix(As[[7]]))$d)
#########################################
#multilayer analysis
####################################
#list of different embedding dimensions
weighted = FALSE
getElbows(svd(as_adjacency_matrix(As[[1]]))$d)
K1 <- 20
getElbows(svd(as_adjacency_matrix(As[[2]]))$d)
K2 <- 19
getElbows(svd(as_adjacency_matrix(As[[3]]))$d)
K3 <- 23
getElbows(svd(as_adjacency_matrix(As[[4]]))$d)
K4 <- 29
getElbows(svd(as_adjacency_matrix(As[[5]]))$d)
K5 <- 24
getElbows(svd(as_adjacency_matrix(As[[6]]))$d)
K6 <- 25
getElbows(svd(as_adjacency_matrix(As[[7]]))$d)
K7 <- 26
Ks <- c(K1,K2,K3,K4,K5,K6,K7)
#we now embed each matrix
#choose 3 arbitrarily
Xhats <- list()
normalize= TRUE #set to true if you think DCSBM
for (i in c(1:length(As))) {
if (weighted) {
A <- as_adjacency_matrix(As[[i]],attr= 'weight')
} else {
A <- as_adjacency_matrix(As[[i]])
}
rownames(A) <- chars
colnames(A) <- chars
A <- A[order(rownames(A)),]
A <- A[,order(colnames(A))]
Xhats[[i]] <- irlba::irlba(A,Ks[i])$u
if(normalize) {
for (j in c(1:nrow(Xhats[[i]]))) {
val <- sqrt(sum(Xhats[[i]][j,]^2))
if (val <= .0000000001) {
Xhats[[i]][j,] <- 0
} else {
Xhats[[i]][j,] <- Xhats[[i]][j,]/val
}
}
}
}
Yhat <- Xhats[[1]]
for ( i in c(2:length(As))) {
Yhat <- cbind(Yhat,Xhats[[i]])
}
getElbows(svd(Yhat)$d)
Uhat <- irlba::irlba(Yhat,41)$u
dat <- as.data.frame(Uhat)
dat$names <- rownames(A)
library(ggplot2)
ggplot(dat, aes(x= V1,y=V2,  label=names))+
geom_point(size=.5) +
geom_text(hjust=1, vjust=-1,size=2,angle=45)
clusts <- Mclust(Uhat)
clust = clusts$classification
dat$names[which(clust == 1)]
dat$names[which(clust == 2)]
dat$names[which(clust == 3)]
getElbows(svd(Yhat)$d)
Uhat <- irlba::irlba(Yhat,1)$u
dat <- as.data.frame(Uhat)
dat$names <- rownames(A)
library(ggplot2)
ggplot(dat, aes(x= V1,y=V2,  label=names))+
geom_point(size=.5) +
geom_text(hjust=1, vjust=-1,size=2,angle=45)
clusts <- Mclust(Uhat)
clust = clusts$classification
dat$names[which(clust == 1)]
dat$names[which(clust == 2)]
dat$names[which(clust == 3)]
getElbows(svd(Yhat)$d)
Uhat <- irlba::irlba(Yhat,10)$u
dat <- as.data.frame(Uhat)
dat$names <- rownames(A)
library(ggplot2)
ggplot(dat, aes(x= V1,y=V2,  label=names))+
geom_point(size=.5) +
geom_text(hjust=1, vjust=-1,size=2,angle=45)
clusts <- Mclust(Uhat)
clust = clusts$classification
dat$names[which(clust == 1)]
dat$names[which(clust == 2)]
dat$names[which(clust == 3)]
dat$names[which(clust == 4)]
dat$names[which(clust == 3)]
dat$names[which(clust == 2)]
dat$names[which(clust == 1)]
#########################################
#multilayer analysis
####################################
#list of different embedding dimensions
weighted = TRUE
getElbows(svd(as_adjacency_matrix(As[[1]]
,attr = "weight"))$d)
getElbows(svd(as_adjacency_matrix(As[[1]]
,attr = "weight"))$d)
K1 <- 8
getElbows(svd(as_adjacency_matrix(As[[2]]),attr = "weight")$d)
getElbows(svd(as_adjacency_matrix(As[[2]],attr = "weight"))$d)
getElbows(svd(as_adjacency_matrix(As[[3]],attr = "weight"))$d)
K3 <- 11
getElbows(svd(as_adjacency_matrix(As[[4]],attr = "weight"))$d)
K4 <- 11
getElbows(svd(as_adjacency_matrix(As[[5]],attr = "weight"))$d)
K5 <- 7
getElbows(svd(as_adjacency_matrix(As[[6]],attr = "weight"))$d)
K6 <- 5
getElbows(svd(as_adjacency_matrix(As[[7]],attr = "weight"))$d)
K7 <- 7
Ks <- c(K1,K2,K3,K4,K5,K6,K7)
#we now embed each matrix
#choose 3 arbitrarily
Xhats <- list()
normalize= TRUE #set to true if you think DCSBM
for (i in c(1:length(As))) {
if (weighted) {
A <- as_adjacency_matrix(As[[i]],attr= 'weight')
} else {
A <- as_adjacency_matrix(As[[i]])
}
rownames(A) <- chars
colnames(A) <- chars
A <- A[order(rownames(A)),]
A <- A[,order(colnames(A))]
Xhats[[i]] <- irlba::irlba(A,Ks[i])$u
if(normalize) {
for (j in c(1:nrow(Xhats[[i]]))) {
val <- sqrt(sum(Xhats[[i]][j,]^2))
if (val <= .0000000001) {
Xhats[[i]][j,] <- 0
} else {
Xhats[[i]][j,] <- Xhats[[i]][j,]/val
}
}
}
}
Yhat <- Xhats[[1]]
for ( i in c(2:length(As))) {
Yhat <- cbind(Yhat,Xhats[[i]])
}
getElbows(svd(Yhat)$d)
Uhat <- irlba::irlba(Yhat,4)$u
dat <- as.data.frame(Uhat)
dat$names <- rownames(A)
library(ggplot2)
ggplot(dat, aes(x= V1,y=V2,  label=names))+
geom_point(size=.5) +
geom_text(hjust=1, vjust=-1,size=2,angle=45)
clusts <- Mclust(Uhat)
clust = clusts$classification
dat$names[which(clust == 1)]
dat$names[which(clust == 2)]
dat$names[which(clust == 3)]
dat$names[which(clust == 4)]
getElbows(svd(Yhat)$d)
Uhat <- irlba::irlba(Yhat,17)$u
dat <- as.data.frame(Uhat)
dat$names <- rownames(A)
library(ggplot2)
ggplot(dat, aes(x= V1,y=V2,  label=names))+
geom_point(size=.5) +
geom_text(hjust=1, vjust=-1,size=2,angle=45)
clusts <- Mclust(Uhat)
clust = clusts$classification
dat$names[which(clust == 1)]
dat$names[which(clust == 2)]
Uhat <- irlba::irlba(Yhat,10)$u
dat <- as.data.frame(Uhat)
dat$names <- rownames(A)
library(ggplot2)
ggplot(dat, aes(x= V1,y=V2,  label=names))+
geom_point(size=.5) +
geom_text(hjust=1, vjust=-1,size=2,angle=45)
clusts <- Mclust(Uhat)
clust = clusts$classification
dat$names[which(clust == 1)]
Uhat <- irlba::irlba(Yhat,2)$u
dat <- as.data.frame(Uhat)
dat$names <- rownames(A)
library(ggplot2)
ggplot(dat, aes(x= V1,y=V2,  label=names))+
geom_point(size=.5) +
geom_text(hjust=1, vjust=-1,size=2,angle=45)
clusts <- Mclust(Uhat)
clust = clusts$classification
dat$names[which(clust == 1)]
dat$names[which(clust == 2)]
dat$names[which(clust == 3)]
dat$names[which(clust == 4)]
dat$names[which(clust == 1)]
Uhat <- irlba::irlba(Yhat,3)$u
dat <- as.data.frame(Uhat)
dat$names <- rownames(A)
library(ggplot2)
ggplot(dat, aes(x= V1,y=V2,  label=names))+
geom_point(size=.5) +
geom_text(hjust=1, vjust=-1,size=2,angle=45)
clusts <- Mclust(Uhat)
clust = clusts$classification
dat$names[which(clust == 1)]
dat$names[which(clust == 2)]
dat$names[which(clust == 3)]
dat$names[which(clust == 4)]
Uhat <- irlba::irlba(Yhat,4)$u
dat <- as.data.frame(Uhat)
dat$names <- rownames(A)
library(ggplot2)
ggplot(dat, aes(x= V1,y=V2,  label=names))+
geom_point(size=.5) +
geom_text(hjust=1, vjust=-1,size=2,angle=45)
clusts <- Mclust(Uhat)
clust = clusts$classification
dat$names[which(clust == 1)]
dat$names[which(clust == 2)]
dat$names[which(clust == 3)]
dat$names[which(clust == 4)]
sample(1:6)
dat$names[which(clust == 1)]
dat$names[which(clust == 2)]
dat$names[which(clust == 3)]
dat$names[which(clust == 4)]
#########################################
#multilayer analysis
####################################
#list of different embedding dimensions
weighted = FALSE
getElbows(svd(as_adjacency_matrix(As[[1]]
,attr = "weight"))$d)
K1 <- 8
getElbows(svd(as_adjacency_matrix(As[[2]],attr = "weight"))$d)
K2 <- 13
getElbows(svd(as_adjacency_matrix(As[[3]],attr = "weight"))$d)
getElbows(svd(as_adjacency_matrix(As[[1]]))$d)
K1 <- 8
getElbows(svd(as_adjacency_matrix(As[[2]]))$d)
K2 <- 19
getElbows(svd(as_adjacency_matrix(As[[3]]))$d)
K3 <- 23
getElbows(svd(as_adjacency_matrix(As[[4]]))$d)
K4 <- 29
getElbows(svd(as_adjacency_matrix(As[[5]]))$d)
K5 <- 24
getElbows(svd(as_adjacency_matrix(As[[6]]))$d)
K6 <- 25
getElbows(svd(as_adjacency_matrix(As[[7]]))$d)
K7 <- 26
Ks <- c(K1,K2,K3,K4,K5,K6,K7)
#we now embed each matrix
#choose 3 arbitrarily
Xhats <- list()
normalize= TRUE #set to true if you think DCSBM
for (i in c(1:length(As))) {
if (weighted) {
A <- as_adjacency_matrix(As[[i]],attr= 'weight')
} else {
A <- as_adjacency_matrix(As[[i]])
}
rownames(A) <- chars
colnames(A) <- chars
A <- A[order(rownames(A)),]
A <- A[,order(colnames(A))]
Xhats[[i]] <- irlba::irlba(A,Ks[i])$u
if(normalize) {
for (j in c(1:nrow(Xhats[[i]]))) {
val <- sqrt(sum(Xhats[[i]][j,]^2))
if (val <= .0000000001) {
Xhats[[i]][j,] <- 0
} else {
Xhats[[i]][j,] <- Xhats[[i]][j,]/val
}
}
}
}
Yhat <- Xhats[[1]]
for ( i in c(2:length(As))) {
Yhat <- cbind(Yhat,Xhats[[i]])
}
getElbows(svd(Yhat)$d)
Uhat <- irlba::irlba(Yhat,4)$u
dat <- as.data.frame(Uhat)
dat$names <- rownames(A)
library(ggplot2)
ggplot(dat, aes(x= V1,y=V2,  label=names))+
geom_point(size=.5) +
geom_text(hjust=1, vjust=-1,size=2,angle=45)
clusts <- Mclust(Uhat)
clust = clusts$classification
dat$names[which(clust == 1)]
dat$names[which(clust == 2)]
dat$names[which(clust == 3)]
dat$names[which(clust == 4)]
dat$names[which(clust == 3)]
dat$names[which(clust == 4)]
dat$names[which(clust == 5)]
dat$names[which(clust == 6)]
dat$names[which(clust == 7)]
dat$names[which(clust == 8)]
dat$names[which(clust == 9)]
dat$names[which(clust == 10)]
dat$names[which(clust == 6)]
dat$names[which(clust == 5)]
